/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var u=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var f=(o,i)=>{for(var e in i)u(o,e,{get:i[e],enumerable:!0})},w=(o,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of g(i))!v.call(o,s)&&s!==e&&u(o,s,{get:()=>i[s],enumerable:!(t=k(i,s))||t.enumerable});return o};var b=o=>w(u({},"__esModule",{value:!0}),o);var M={};f(M,{default:()=>d});module.exports=b(M);var m=require("obsidian");var a=require("obsidian"),p={stackTabsInPopout:!0,modifierKey:"metaKey"},r=class extends a.PluginSettingTab{constructor(i,e){super(i,e),this.plugin=e}display(){let{containerEl:i}=this;i.empty(),i.createEl("h1",{text:"Quick Select Settings"});let e=i.createSpan();e.setText(" (press key)"),document.addEventListener("keydown",t=>{(t.metaKey||t.ctrlKey||t.altKey)&&e.setText(t.key)}),new a.Setting(i).setName("Modifier key").setDesc(createFragment(t=>{t.appendText("Choose the key that activates Quick Select: "),t.append(e)})).addDropdown(t=>t.addOptions({metaKey:"Meta",ctrlKey:"Control",altKey:"Alt"}).setValue(this.plugin.settings.modifierKey).onChange(async s=>{this.plugin.settings.modifierKey=s,await this.plugin.saveSettings()})),i.createEl("h2",{text:"Miscellaneous"}),new a.Setting(i).setName("Stack Tabs in Popout Windows").setDesc("Enable or disable stacked tabs for popout windows.").addToggle(t=>t.setValue(this.plugin.settings.stackTabsInPopout).onChange(async s=>{this.plugin.settings.stackTabsInPopout=s,await this.plugin.saveSettings()}))}};var h=()=>{let o=navigator.userAgent;return!/Android|iPhone|iPod/.test(o)},l=o=>{o.body.classList.add("quick-select-modal-active")},c=o=>{o.body.classList.remove("quick-select-modal-active")},y=o=>"app"in o&&"workspace"in o.app;var d=class extends m.Plugin{constructor(){super(...arguments);this.activeModal=null;this.results=[];this.popoutWindows=new Set;this.originalHotkeys={}}async onload(){await this.loadSettings(),this.addSettingTab(new r(this.app,this)),this.modalObserver=new MutationObserver(this.handleDOMMutation.bind(this)),this.modalObserver.observe(document.body,{childList:!0,subtree:!0}),this.resultsObserver=new MutationObserver(this.handleResultsMutation.bind(this)),this.registerEvent(this.app.workspace.on("quick-preview",this.handleQuickPreview.bind(this))),this.registerEvent(this.app.workspace.on("layout-change",this.handleLayoutChange.bind(this))),document.addEventListener("keydown",this.handleKeyPress.bind(this),!0),this.checkForActiveModal()}async loadSettings(){this.settings=Object.assign({},p,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}handleLayoutChange(){this.app.workspace.iterateAllLeaves(e=>{let t=e.view.containerEl.closest("body");if(t!=null&&t.classList.contains("is-popout-window")){let s=t.ownerDocument.defaultView;s&&y(s)&&!this.popoutWindows.has(s)&&this.initializePopoutWindow(s)}})}initializePopoutWindow(e){this.popoutWindows.add(e);let t=new MutationObserver(this.handleDOMMutation.bind(this));t.observe(e.document.body,{childList:!0,subtree:!0}),e.addEventListener("keydown",this.handleKeyPress.bind(this)),this.settings.stackTabsInPopout&&this.setStackedTabsForPopoutWindow(e.app.workspace),this.register(()=>{t.disconnect(),e.removeEventListener("keydown",this.handleKeyPress.bind(this)),this.popoutWindows.delete(e)})}setStackedTabsForPopoutWindow(e){let t=e;t.onLayoutReady(()=>{t.floatingSplit&&t.floatingSplit.children.forEach(s=>{s.children.forEach(n=>{n.children[0].view.getViewType()!=="outline"&&n.setStacked(!0)})})})}handleDOMMutation(e){for(let t of e)t.addedNodes.forEach(s=>{s instanceof HTMLElement&&(s.classList.contains("modal-container")||s.classList.contains("suggestion-container"))&&this.handleNewModal(s)}),t.removedNodes.forEach(s=>{s instanceof HTMLElement&&(s.classList.contains("modal-container")||s.classList.contains("suggestion-container"))&&this.handleModalClosed(s)})}handleNewModal(e){let t=e.querySelector(".suggestion, .prompt-results");t&&h()&&(this.activeModal=e,this.injectFunctionality(t),l(e.ownerDocument),this.disableDefaultHotkeys())}disableDefaultHotkeys(){let e=this.app.internalPlugins.app.hotkeyManager;for(let s=1;s<9;s++){let n=`workspace:goto-tab-${s}`;this.originalHotkeys[n]=e.getDefaultHotkeys(n),e.removeDefaultHotkeys(n)}let t="workspace:goto-last-tab";this.originalHotkeys[t]=e.getDefaultHotkeys(t),e.removeDefaultHotkeys(t)}handleModalClosed(e){this.activeModal===e&&(this.activeModal=null,this.results=[],c(e.ownerDocument),this.resultsObserver.disconnect(),this.restoreDefaultHotkeys(),document.removeEventListener("keydown",this.handleKeyPress.bind(this),!0))}restoreDefaultHotkeys(){let e=this.app.internalPlugins.app.hotkeyManager;for(let[t,s]of Object.entries(this.originalHotkeys))e.addDefaultHotkeys(t,s);e.bake(),this.originalHotkeys={}}injectFunctionality(e){this.updateResults(e),this.resultsObserver.observe(e,{childList:!0,subtree:!0})}handleResultsMutation(){if(this.activeModal){let e=this.activeModal.querySelector(".suggestion, .prompt-results");e&&this.updateResults(e)}}updateResults(e){let t=e.querySelectorAll(".suggestion-item:not(.mod-group)");this.results=Array.from(t).slice(0,9).map((s,n)=>({title:s.textContent||`Result ${n+1}`,element:s})),l(e.ownerDocument)}handleKeyPress(e){if(this.activeModal&&e[this.settings.modifierKey]&&e.key>="1"&&e.key<="9"){let t=parseInt(e.key)-1;this.results[t]&&(e.preventDefault(),this.results[t].element.click())}}handleQuickPreview(){this.activeModal&&!this.activeModal.ownerDocument.body.classList.contains("quick-select-modal-active")&&l(this.activeModal.ownerDocument)}checkForActiveModal(){let e=document.querySelector(".modal-container, .suggestion-container");e instanceof HTMLElement&&this.handleNewModal(e)}onunload(){this.modalObserver.disconnect(),this.resultsObserver.disconnect(),document.removeEventListener("keydown",this.handleKeyPress),c(document),this.popoutWindows.forEach(e=>{e.removeEventListener("keydown",this.handleKeyPress),c(e.document)})}};
