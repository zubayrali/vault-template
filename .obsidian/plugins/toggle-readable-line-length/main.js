/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ToggleReadableLineLengthPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var ToggleReadableLineLengthPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "flip-readable-line-length-setting",
      name: "Toggle Readable line length",
      // Obsidian developer docs suggest not setting hotkeys, but this is the entire point of this plugin, so ignoring that advice.
      // https://docs.obsidian.md/Plugins/User+interface/Commands#Hot%20keys
      hotkeys: [{ modifiers: ["Mod", "Shift"], key: "e" }],
      callback: () => {
        const optionEnabled = (
          // @ts-ignore
          this.app.vault.getConfig("readableLineLength")
        );
        this.app.vault.setConfig("readableLineLength", !optionEnabled);
      }
    });
  }
};
