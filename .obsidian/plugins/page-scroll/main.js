/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => PageScrollPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var PageScrollPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.addCommand({
      id: "page-scroll-down",
      name: "page-down",
      callback: () => this.scroll("down"),
      hotkeys: [{ key: "AudioVolumeDown", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-up",
      name: "page-up",
      callback: () => this.scroll("up"),
      hotkeys: [{ key: "AudioVolumeUp", modifiers: [] }]
    });
    this.addCommand({
      id: "page-scroll-top",
      name: "page-top",
      callback: () => this.scroll("top")
    });
    this.addCommand({
      id: "page-scroll-bottom",
      name: "page-bottom",
      callback: () => this.scroll("bottom")
    });
    if (this.app.isMobile) {
      this.registerButton("top", "\u21C8", 64, 2);
      this.registerButton("up", "\u2191", 56, 2);
      this.registerButton("down", "\u2193", 48, 2);
      this.registerButton("bottom", "\u21CA", 40, 2);
    } else {
      this.registerButton("top", "\u21C8", 16, 1);
      this.registerButton("up", "\u2191", 12, 1);
      this.registerButton("down", "\u2193", 8, 1);
      this.registerButton("bottom", "\u21CA", 4, 1);
    }
  }
  onunload() {
    this.clearButton();
  }
  currentView() {
    return this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
  }
  /** mode = top|bottom|up|down */
  scroll(mode) {
    var _a, _b, _c, _d, _e, _f;
    console.log("scroll", mode);
    let thisView = this.app.workspace.getActiveViewOfType(import_obsidian.MarkdownView);
    let thisScrollObj = (thisView == null ? void 0 : thisView.getMode()) == "preview" ? (_b = (_a = thisView == null ? void 0 : thisView.previewMode) == null ? void 0 : _a.renderer) == null ? void 0 : _b.previewEl : (_d = (_c = thisView == null ? void 0 : thisView.editMode) == null ? void 0 : _c.cm) == null ? void 0 : _d.scrollDOM;
    if (!thisScrollObj) {
      try {
        thisScrollObj = (_f = (_e = this.app.workspace.getActiveFileView()) == null ? void 0 : _e.containerEl) == null ? void 0 : _f.children[1];
        if (!thisScrollObj) {
          console.error("scroll failed ==> scrollObj is missing");
          return;
        }
      } catch (e) {
        console.error("scroll failed ==> ", e);
        return;
      }
    }
    let range = thisScrollObj.clientHeight - 60;
    switch (mode) {
      case "up":
        thisScrollObj.scrollBy(0, -range);
        break;
      case "down":
        thisScrollObj.scrollBy(0, range);
        break;
      case "top":
        thisScrollObj.scroll(0, 0);
        break;
      case "bottom":
        thisScrollObj.scroll(0, thisScrollObj.scrollHeight);
        break;
    }
  }
  /** 创建按钮 */
  registerButton(mode, name, offsetBottom, offsetRight) {
    let self = this;
    let buttonId = mode + "TriskiPageBtn";
    if (!document.getElementById(buttonId)) {
      let button = document.createElement("button");
      button.id = buttonId;
      button.style = `position: absolute; bottom: ${offsetBottom}%; right: ${offsetRight}%; background-color: transparent; width: 27px; border-color: black;`;
      button.onclick = () => self.scroll(mode);
      button.setText(name);
      document.body.appendChild(button);
    }
  }
  /** 删除按钮 */
  clearButton() {
    var _a, _b, _c, _d;
    (_a = document.getElementById("upTriskiPageBtn")) == null ? void 0 : _a.remove();
    (_b = document.getElementById("downTriskiPageBtn")) == null ? void 0 : _b.remove();
    (_c = document.getElementById("topTriskiPageBtn")) == null ? void 0 : _c.remove();
    (_d = document.getElementById("bottomTriskiPageBtn")) == null ? void 0 : _d.remove();
  }
};
//# sourceMappingURL=data:application/json;base64,
